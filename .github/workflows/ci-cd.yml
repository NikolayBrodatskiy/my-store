name: ci-cd

on:
  push:
    branches: ['production']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CONTAINER_PREFIX: my-store

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      APP_IMAGE: ${{ steps.setImageName.outputs.APP_IMAGE }}
    permissions:
      id-token: write
      packages: write
      contents: read
      attestations: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      -
        name: Build and push
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./_docker/github/app/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        id: artifact
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - id: setImageName
        run: echo "APP_IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}" >> "$GITHUB_OUTPUT"

      - name: Inspect
        run: |
          docker image inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ steps.push.outputs.digest }}

  deploy:
    needs: [build]
    runs-on: self-hosted
    env:
      APP_IMAGE: ${{needs.build.outputs.APP_IMAGE}}
      DB_DATABASE: ${{ vars.DB_DATABASE }}
      DB_USERNAME: ${{ vars.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Stop all containers
        run: docker stop $(docker ps -a -q) || true

      - name: Remove unused containers in addition to other Docker resources, such as (unused) images and networks.
        run: docker system prune || true

      - name: Docker compose up
        run: docker compose -f docker-compose.prod.yml up -d

      - run: docker exec ${{ env.CONTAINER_PREFIX }}_app composer update
      - run: docker exec ${{ env.CONTAINER_PREFIX }}_app composer install
      - run: docker exec ${{ env.CONTAINER_PREFIX }}_app php artisan migrate
      - run: docker exec ${{ env.CONTAINER_PREFIX }}_app php artisan cache:clear
      - run: docker exec ${{ env.CONTAINER_PREFIX }}_app php artisan config:cache


